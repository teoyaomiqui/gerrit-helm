{{- $volumes := .Values.persistence.volumes }}
{{- $releaseName := .Release.Name }}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "gerrit.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "gerrit.name" . }}
    helm.sh/chart: {{ include "gerrit.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "gerrit.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "gerrit.name" . }}
        release: {{ .Release.Name }}
    spec:
      securityContext:
        fsGroup: 1000
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c", "cp /var/gerrit/config/initialize-gerrit.sh /var/gerrit && sh /var/gerrit/initialize-gerrit.sh"]
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: ssh
              containerPort: 29418
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 10
            successThreshold: 1
            timeoutSeconds: 5
          volumeMounts:
            - name: gerrit-config
              mountPath: /var/gerrit/config
{{ if .Values.persistence.enabled }}
  {{- range $volumes }}
            - name: {{ .name | quote }}
              mountPath: /var/gerrit/{{ .name }}
  {{end}}
{{end}}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
        - name: gerrit-config
          configMap:
            name: gerrit-config
            items:
            - key: gerrit.config
              path: gerrit.config
            - key: initialize-gerrit.sh
              path: initialize-gerrit.sh
{{ if .Values.persistence.enabled }}
  volumeClaimTemplates:
  {{- range $volumes }}
    - metadata:
        name: {{ .name | quote }}
      spec:
        storageClassName: {{ .storageClass | quote }}
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .size | quote }}
  {{end}}
{{end}}
