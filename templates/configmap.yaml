apiVersion: v1
kind: ConfigMap
metadata:
  name: gerrit-override
  labels:
    app.kubernetes.io/name: {{ include "gerrit.name" . }}
    helm.sh/chart: {{ include "gerrit.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
data:
  entrypoint: |-
    if [ ! -d /var/gerrit/git/All-Projects.git ]; then
      echo "Initializing Gerrit site ..."
      java -jar /var/gerrit/bin/gerrit.war init --batch --install-all-plugins -d /var/gerrit
      java -jar /var/gerrit/bin/gerrit.war reindex -d /var/gerrit
      git config -f /var/gerrit/etc/gerrit.config --add container.javaOptions "-Djava.security.egd=file:/dev/./urandom"
    fi
    set -ex

    GERRIT_HOME=/var/gerrit
    GERRIT_CONFIG=$GERRIT_HOME/etc/gerrit.config
    GERRIT_WAR=$GERRIT_BIN/gerrit.war

    git config -f "${GERRIT_CONFIG}" ldap.server "${GERRIT_LDAP_SERVER}"
    git config -f "${GERRIT_CONFIG}" ldap.accountBase "${GERRIT_LDAP_ACCOUNT_BASE}"
    git config -f "${GERRIT_CONFIG}" ldap.groupBase "${GERRIT_LDAP_GROUP_BASE}"
    git config -f "${GERRIT_CONFIG}" ldap.username "${GERRIT_LDAP_USER}"
    git config -f "${GERRIT_CONFIG}" ldap.password "${GERRIT_LDAP_PASSWORD}"
    git config -f "${GERRIT_CONFIG}" ldap.accountFullName cn
    git config -f "${GERRIT_CONFIG}" ldap.accountPattern '(&(objectClass=person)(uid=${username}))'
    git config -f "${GERRIT_CONFIG}" ldap.accountEmailAddress "mail"
    git config -f "${GERRIT_CONFIG}" ldap.groupMemberPattern '(&(objectClass=Posixgroup)(member=${cn}))'
    git config -f "${GERRIT_CONFIG}" ldap.sslVerify "${GERRIT_LDAP_SSL_VERIFY}"
    git config -f "${GERRIT_CONFIG}" ldap.accountSshUserName "${ACCOUNT_SSH_USER_NAME}"
    git config -f "${GERRIT_CONFIG}" ldap.supportAnonymous "${GERRIT_LDAP_SUPPORT_ANONYMOUS}"
    git config -f "${GERRIT_CONFIG}" auth.type "ldap"
    git config -f "${GERRIT_CONFIG}" auth.gitBasicAuth 'true'
    git config -f "${GERRIT_CONFIG}" auth.gitBasicAuthPolicy HTTP
    git config -f "${GERRIT_CONFIG}" httpd.listenUrl "${GERRIT_HTTPD_LISTEN_URL:-http://*:8080}"
    git config -f "${GERRIT_CONFIG}" gerrit.canonicalWebUrl "${CANONICAL_WEB_URL:-http://$HOSTNAME}"
    git config -f "${GERRIT_CONFIG}" gerrit.basePath "git"
    git config -f "${GERRIT_CONFIG}" plugins.allowRemoteAdmin 'true'
    git config -f "${GERRIT_CONFIG}" sendemail.enable 'false'

    exec /var/gerrit/bin/gerrit.sh run
